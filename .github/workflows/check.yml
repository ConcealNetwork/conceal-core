name: Build check

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'            # We don't want this to run on release
  pull_request:

jobs:
  build-windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup MSBuild.exe
        uses: warrenbuckley/Setup-MSBuild@v1

      - name: Build
        shell: powershell
        id: build
        run: |
          $build_folder = "build"
          $sha = "${{ github.sha }}"
          $ccx_ver = "${{ github.ref }}" -replace 'refs/tags/'
          $release_name = "ccx-cli-win64-v$ccx_ver"
          mkdir "$build_folder"
          cd "$build_folder"
          cmake -G "Visual Studio 16 2019" -A x64 -DBOOST_ROOT="$env:BOOST_ROOT_1_69_0" ..
          msbuild concealX.sln /p:Configuration=Release /m

  build-ubuntu16:
    name: Ubuntu 16.04
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@master

      - name: Build
        id: build
        run: |
          BOOST_ROOT=
          sudo apt-get purge '*boost*'
          sudo apt install -y libboost-all-dev
          build_folder="build/debug"
          ccx_ver=$(echo "$GITHUB_REF" | sed 's|refs/tags/||')
          ccx_ver_folder=$(echo $ccx_ver | sed 's/\.//g')
          release_name=ccx-cli-ubuntu-1604-v"$ccx_ver"
          mkdir -p "$build_folder"
          cd "$build_folder"
          cmake ../..
          make -j2

  build-ubuntu18:
    name: Ubuntu 18.04
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master

      - name: Build
        id: build
        run: |
          BOOST_ROOT=
          sudo apt-get purge '*boost*'
          sudo apt install -y libboost-all-dev
          build_folder="build/debug"
          ccx_ver=$(echo "$GITHUB_REF" | sed 's|refs/tags/||')
          ccx_ver_folder=$(echo $ccx_ver | sed 's/\.//g')
          release_name=ccx-cli-ubuntu-1804-v"$ccx_ver"
          mkdir -p "$build_folder"
          cd "$build_folder"
          cmake ../..
          make -j2

  build-macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master

      - name: Build
        id: build
        run: |
          build_folder="build/"
          brew install gcc boost@1.60
          brew link boost@1.60 --force
          mkdir "$build_folder"
          cd "$build_folder"
          cmake -DCMAKE_C_FLAGS="-mmacosx-version-min=10.12" -DCMAKE_CXX_FLAGS="-mmacosx-version-min=10.12" ..
          make -j2
